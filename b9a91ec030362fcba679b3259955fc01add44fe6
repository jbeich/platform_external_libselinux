{
  "comments": [
    {
      "key": {
        "uuid": "796b8031_beddfb53",
        "filename": "src/label_android_property.c",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "nit: whitespace",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3937486d_506e7af5",
        "filename": "src/label_android_property.c",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-10T15:02:23Z",
      "side": 1,
      "message": "Oops, this is old. It showed up in my diff with upstream libselinux. Feel free to ignore",
      "parentUuid": "796b8031_beddfb53",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9cfb89d_44f21814",
        "filename": "src/label_android_property.c",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T15:40:37Z",
      "side": 1,
      "message": "Yes there was a space plus line 115 had blank line - Fixed both in V3",
      "parentUuid": "3937486d_506e7af5",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39c4a87c_ff81b7d6",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-08T16:23:08Z",
      "side": 1,
      "message": "Sorry, my prior comment was not just for that one line but rather the entire change to the comment header - it isn\u0027t relevant to this code change and isn\u0027t quite right anyway.",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_248d7e04",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "Why did you get rid of the sub-second time check? It\u0027s certainly unnecessary, but I would prefer that we intentionally keep diffs between Android and mainline libselinux to only necessary differences.",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99ce74a2_0892f7ac",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "I understand MAC OSX does not support this so removed. I don\u0027t have MAC so cannot test.\n\nThe #include \u003cstdio_ext.h\u003e was also removed for the same reason because of: __fsetlocking(fp, FSETLOCKING_BYCALLER); in process_file()",
      "parentUuid": "796b8031_248d7e04",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d902ac8c_f0966d9e",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-10T15:02:23Z",
      "side": 1,
      "message": "They definitely don\u0027t have __fsetlock.\n\nI\u0027ve had good luck using Apple\u0027s developer site search:\nhttps://developer.apple.com/search/",
      "parentUuid": "99ce74a2_0892f7ac",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9c09b_2774c2f3",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T15:40:37Z",
      "side": 1,
      "message": "I looked on the site and they don\u0027t mention nano sec fields in stat(2). Anyway as its not much use I thought I would remove it upstream as well and see how it goes.",
      "parentUuid": "d902ac8c_f0966d9e",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f94050d5_e57832f3",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-10T17:38:54Z",
      "side": 1,
      "message": "I tried building upstream libselinux on an old Mac that I borrowed from someone, and found the following to be missing there:\n- stdio_ext.h\n- __fsetlocking\n- sys/vfs.h\n- linux/limits.h\n- mempcpy\n- sscanf %ms (obsoleted by the rewrite to use your helper)\n- st_mtim.tv_nsec\n- fgets_unlocked\n- non-int pthread_once_t, thereby breaking __selinux_once() fallback in the case where the application is not linked to libpthread.\n\nPlus of course the various Linux-specific things like NETLINK socket support.\n\nDon\u0027t know if that is all still true of latest MacOS X or how old of MacOS X one has to support for Android builds.\n\nI don\u0027t think the nsec comparison is needed regardless.  Not sure why Eric put it in there in the first place.",
      "parentUuid": "79c9c09b_2774c2f3",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "797aa034_ee8c7f3f",
        "filename": "src/label_file.c",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-11T12:27:36Z",
      "side": 1,
      "message": "Thanks for the useful info. The only problem was with linux/limits.h but simple change to limits.h fixed this.\n\nI\u0027ve now uploaded V4 changes that should cover all the outstanding issues.\n\nI\u0027ll now have a go at updating frameworks/base/services/core/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java to support file_contexts.bin",
      "parentUuid": "f94050d5_e57832f3",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_89b56b40",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "free(NULL)?\n\nWon\u0027t context be NULL if items\u003d\u003d2 ?",
      "range": {
        "startLine": 400,
        "startChar": 2,
        "endLine": 400,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9c09b_a70d7241",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "Removed free(context);",
      "parentUuid": "796b8031_89b56b40",
      "range": {
        "startLine": 400,
        "startChar": 2,
        "endLine": 400,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_3db6047c",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 409,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "free(NULL) if items\u003d\u003d2",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9cfb89d_84cb9093",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 409,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "But at this stage there could be 3 items, so I\u0027ve not changed this.",
      "parentUuid": "b9d41838_3db6047c",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39c4a87c_7fdb67e6",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-08T16:23:08Z",
      "side": 1,
      "message": "Logic change.   Previously we would only call compile_regex() up front if rec-\u003evalidating, and would always report an error if it failed.  I understand you are changing this because sefcontext_compile needs to compile the regex always (vs label_file, which defers compiling to first use unless validating on open), but perhaps you ought to set rec-\u003evalidating in sefcontext_compile instead.  That however will also enable context validation, so you might need to override/set the selinux_validate callback to a function that just always succeeds.",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9cfb89d_3b817f98",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-09T10:04:57Z",
      "side": 1,
      "message": "I did test the option of setting rec-\u003evalidating \u003d 1 to get around changing this but as sefcontext_compile does not have a view of the policy to check against, it always displayed the fail messages as it used the current host policy to validate against. I guess to resolve this sefcontext_compile should have an option pointing to the policy - do you know if there is a way around this (could alway set selinux_log to output to dev/null but yuk)\n\nAnd also the -o option you mentioned for sepolicy Android.mk",
      "parentUuid": "39c4a87c_7fdb67e6",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99ce74a2_7aa6d10f",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-09T12:19:19Z",
      "side": 1,
      "message": "Ignore my last comment, I\u0027ll add -v -p and -o options to sefcontext_compile. -p for policy, -v verify, -o output file path.",
      "parentUuid": "b9cfb89d_3b817f98",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39c4a87c_e819fb38",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-09T12:30:47Z",
      "side": 1,
      "message": "Why can\u0027t you just override selinux_validate callback with a function that does nothing like I suggested above?\nOr, alternatively, change process_line() to take an additional bool argument that enables regex compilation without validation of the contexts.\nI also noticed that apparently at some point we changed these errors from fatal errors to warnings, even with rec-\u003evalidating, which seems odd to me.  I guess setfiles -c or checkfc in Android will still fail if there is an invalid context because they define their own SELINUX_CB_VALIDATE callbacks, but I would have expected label_file.c to treat not only context validation but also regex and type/mode errors as fatal at least when rec-\u003evalidating is set if not always.  Something to take up another time...",
      "parentUuid": "99ce74a2_7aa6d10f",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9c09b_79afff6b",
        "filename": "src/label_file.h",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-09T12:36:31Z",
      "side": 1,
      "message": "Okay I\u0027ll just override the selinux_validate.",
      "parentUuid": "39c4a87c_e819fb38",
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_0fd5fb2d",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "You should consider submitting this change to the main libselinux. Much cleaner and it will help reduce the diff between it and Android.",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 19
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9c09b_a738d2fe",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "I plan to once (if) this work is accepted in Android plus all the other corrections (e.g. fix file label sort and improve error handling)",
      "parentUuid": "796b8031_0fd5fb2d",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 19
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_53b1c182",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "Only the last line will be freed.\n\nThis belongs in the while loop.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79c9c09b_c7aaae8d",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "According to getline man page if line_buf \u003d NULL and line_len \u003d 0 (I now specifically set line_len \u003d 0) then will malloc on first call, then realloc on the others, therefore I think the code is correct.\nHowever after some more testing using valgrind I\u0027ve improved the error handling around this, so if process_line errors I close the file and free line_buf.\n\nI\u0027ve done much same in label_file.c - process_file()",
      "parentUuid": "b9d41838_53b1c182",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "193e044a_9451545d",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-10T15:02:23Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "79c9c09b_c7aaae8d",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_33b0754e",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "calloc",
      "range": {
        "startLine": 270,
        "startChar": 0,
        "endLine": 270,
        "endChar": 53
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99ce74a2_08ab17e5",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1021859
      },
      "writtenOn": "2015-06-10T11:25:57Z",
      "side": 1,
      "message": "Changed malloc to calloc etc.",
      "parentUuid": "b9d41838_33b0754e",
      "range": {
        "startLine": 270,
        "startChar": 0,
        "endLine": 270,
        "endChar": 53
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9d41838_13b5793d",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "No need if you calloc.",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 275,
        "endChar": 30
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_eff5ffc3",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "calloc",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 278,
        "endChar": 51
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "796b8031_4f2c53d3",
        "filename": "utils/sefcontext_compile.c",
        "patchSetId": 2
      },
      "lineNbr": 284,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-09T21:57:28Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 284,
        "startChar": 15,
        "endLine": 284,
        "endChar": 16
      },
      "revId": "b9a91ec030362fcba679b3259955fc01add44fe6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}