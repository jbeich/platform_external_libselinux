{
  "comments": [
    {
      "key": {
        "uuid": "f29846f7_9c0705e6",
        "filename": "include/selinux/android.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-02-06T18:18:09Z",
      "side": 1,
      "message": "Is it possible to get rid of the existing selinux_android_restorecon() and selinux_android_restorecon_recursive() calls, and only use this method?\n\nPerhaps something like:\n\n#define selinux_android_restorecon(fn) selinux_android_restorecon(fn, SELINUX_ANDROID_RESTORECON_FORCE)\n\n#define selinux_android_restorecon_recursive(fn) selinux_android_restorecon(fn, SELINUX_ANDROID_RESTORECON_RECURSIVE)\n\nextern int selinux_android_restorecon(const char *file, unsigned int flags);\n\nThat way, we don\u0027t have to have 3 exposed methods which all basically do the same thing.\n\nIt would also be nice if we could fix up all the callers, so that we only have one method which takes flags.",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32cadede_4cfe931b",
        "filename": "include/selinux/android.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2014-02-06T18:29:06Z",
      "side": 1,
      "message": "API/ABI compatibility requires maintaining at least selinux_android_restorecon() as an actual library function unless Android plays by different rules than Linux.\nWe could likely get rid of selinux_android_restorecon_recursive() since that has only been in AOSP master thus far and not in any Android release.",
      "parentUuid": "f29846f7_9c0705e6",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2640ec9_9ab62ddf",
        "filename": "include/selinux/android.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-02-06T18:31:35Z",
      "side": 1,
      "message": "This isn\u0027t an NDK exposed API. We don\u0027t have compatibility requirement for this function.",
      "parentUuid": "32cadede_4cfe931b",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32cadede_ecbadf52",
        "filename": "include/selinux/android.h",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2014-02-06T18:51:43Z",
      "side": 1,
      "message": "Ok, so do you want me to re-spin this one (requires re-basing the app data directory relabeling one on top again) or just do a follow-on change on top of both of them?  I guess we\u0027ll add macros for them initially for API compatibility, then hunt down the callers and update them, then drop the macros.",
      "parentUuid": "b2640ec9_9ab62ddf",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2640ec9_ba0cd10a",
        "filename": "src/android.c",
        "patchSetId": 5
      },
      "lineNbr": 832,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-02-06T18:18:09Z",
      "side": 1,
      "message": "shouldn\u0027t FLAGS be SELINUX_ANDROID_RESTORECON_FORCE, not 0?",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2a7c221_74a23ebe",
        "filename": "src/android.c",
        "patchSetId": 5
      },
      "lineNbr": 832,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2014-02-06T18:29:06Z",
      "side": 1,
      "message": "force only matters if recurse is set, as we only apply the restorecon_last optimization in the recursive case.",
      "parentUuid": "b2640ec9_ba0cd10a",
      "revId": "08587cfbf9de7d89a3d2d4e87aecd82a478e3289",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}